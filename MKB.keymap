// #include <layout_shift.dtsi>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <layout_shift_kp_override.dtsi>

#define DEF 0
#define SYMBOL 1
#define NUM 2
#define FNC 3
#define SCROLL 4
#define BT 5

#define HOLDTAP_TIMEOUT 200
#define HOLDTAP_QUICK   100

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

/{
    behaviors{
        minus_jis: minus_jis_macro{
            compatible = "zmk,behavior-mod-morph";
            label="MINUS_JIS";
            bindings = <&kp MINUS> m<&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tab_fixed:tab_fixed{
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_FIXED";
            bindings = <&kp A>;
            mods = <MOD_LALT>;
        };

        tab_revive:tab_revive{
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_RIVEVE";
            bindings = <&kp T>;
            mods = <(MOD_LCTRL | MOD_LSFT)>;
        };

        tab_dele:tab_dele{
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_DELE";
            bindings = <&kp L>;
            mods = <(MOD_LCTRL)>;
        };

        all_close:all_close{
            compatible = "zmk,behavior-mod-morph";
            label = "ALL_CLOSE";
            bindings = <&kp D>;
            mods = <(MOD_LGUI)>;
        };

        enter_lay2: enter_lay2{
            compatible = "zmk,behavior-hold-tap";
            bindings = <&lt NUM ENTER &mo 2>;
            timeout-ms = <HOLDTAP_TIMEOUT>;
            quick-tap-ms = <HOLDTAP_QUICK>;
        };    

        space_lay1:space_lay1{
            compatible = "zmk,behavior-hold-tap";
            bindings = <&lt NUM SPACE &mo 1>;
            timeout-ms = <HOLDTAP_TIMEOUT>;
            quick-tap-ms = <HOLDTAP_QUICK>;
        };
            esc_alt:esc_alt{
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp ESC &kp LALT>;
            timeout-ms = <HOLDTAP_TIMEOUT>;
            quick-tap-ms = <HOLDTAP_QUICK>;
        };
    }
}

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Def";
            bindings = <
&tab_revive   &kp Q     &kp W      &kp E     &kp R           &kp T               &kp Y           &kp U          &kp I      &kp O      &kp P           &kp SEMI
&tab_fixed    &kp A     &kp S      &kp D     &kp F           &kp G               &kp H           &kp J          &kp K      &kp L      &minus_jis      &kp COMMA
&tab_dele     &kp Z     &kp X      &kp C     &kp V           &kp B               &kp N           &kp M          &btn1      &btn2      &btn4           &kp DOT
&mt ESC LALT  &kp TAB   &kp LCTL             &mt LANG1 LSHFT &space_lay1         &kp BKSP        &enter_lay2               &btn3      &btn5           &kp RCTL

              &kp HOME  &kp DOWN  &PG_UP     &kp PG_DN       &kp DEL             &kp LEFT        &kp UP         &kp ENTER  &kp DOWN   &kp RIGHT
                                   &kp A                                                                       &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            label = "Symbol";
            bindings = <
&kp GRAVE  &kp PG_UP  &kp TILDE  &kp APOS  &kp DQT   &kp STAR                 &kp FSLH     &kp LBKT     &kp RBKT     &kp EXCL     &kp QMARK    &none
&tog_ls    &kp PRCNT  &kp HASH   &kp AMPS  &kp PIPE  &kp DLLR                 &kp BSLH     &kp LBRC     &kp RBKT     &kp SEMI     &kp COLON    &kp UNDER
&none      &kp BKSP   &kp CARET  &kp GRAVE &kp DQT   &kp DOT                  &kp AT       &kp LPAR     &kp RPAR     &kp LT       &kp GT       &none
&none      &none      &kp LALT             &none     &none                    &kp BKSP     &kp LSHFT                 &none        &none        &none

           &kp HOME   &kp DOWN   &PG_UP    &kp PG_DN &kp DEL                  &kp LEFT     &kp UP       &kp ENTER    &kp DOWN     &kp RIGHT
                                 &kp A                                                                  &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp CAPS        &none          &kp N7     &kp N8    &kp N9     &kp STAR       &kp FSLH   &kp LEFT   &kp UP     &none      &none      &none
&none           &none          &kp N4     &kp N5    &kp N6     &kp PLUS       &all_close &kp LEFT   &kp DOWN   &kp RIGHT  &minus_jis &none
&mt LSHFT SPACE &kp BACKSPACE  &kp N1     &kp N2    &kp N3     &kp DOT        &none      &kp LEFT   &kp DOWN   &kp RIGHT  &none      &none
&none           &kp ENTER      &none                &kp N0     &kp ENTER      &none      &none                 &none      &none      &none

&kp LEFT        &kp UP         &kp SPACE  &kp DOWN  &kp RIGHT                            &kp HOME   &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                                           &kp A                                                     &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        mouse_layer {
            label = "Fnc";
            bindings = <
&none    &none  &none     &none    &none     &none      &none  &none    &none     &none     &none     &none
&none    &none  &none     &none    &none     &none      &none  &none    &none     &none     &none     &none
&none    &none  &none     &none    &none     &none      &none  &none    &none     &none     &none     &none
&none    &none  &none              &none     &none      &none  &none              &none     &none     &none

&kp LEFT  &kp UP  &kp SPACE  &kp DOWN  &kp RIGHT                      &kp HOME  &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                             &kp A                                              &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        scroll_layer {
            label = "Scr";
            bindings = <
&none    &none  &none     &none    &none     &none      &none  &none    &none     &none     &none     &none
&none    &none  &none     &none    &none     &none      &none  &none    &none     &none     &none     &none
&none    &none  &none     &none    &none     &none      &none  &none    &mkp MB1  &mkp MB3  &mkp MB2  &none
&none    &none  &none              &none     &none      &none  &none              &none     &none     &none

&kp LEFT  &kp UP  &kp SPACE  &kp DOWN  &kp RIGHT                      &kp HOME  &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                             &kp A                                              &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        bt_layer {
            label = "BT";
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &bt BT_CLR_ALL &none    &none     &none     &none     &none
&none      &none        &none        &none        &none        &none            &none          &none    &none     &none     &none     &none
&none      &none        &none        &none        &none        &none            &none          &none    &none     &none     &none     &none
&none      &none        &none                     &none        &none            &none          &none              &none     &none     &none

&kp LEFT    &kp UP        &kp SPACE     &kp DOWN      &kp RIGHT                                       &kp HOME  &kp PG_UP  &kp ENTER  &kp PG_DN  &kp END
                                        &kp A                                                                   &kp B
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
